---
layout: post
title:  "概览"
date:   2019-09-14 22:56:00 -0400
categories: documents
---

自应援会成立以来，攻城狮组一直致力于提供高质量的IT支持服务，包括但不仅限于口袋房间监听，新浪微博监听、摩点集资抽卡和PK实时播报。五选前，应援会的IT服务架构非常分散，酷Q机器人、抽卡机器人和PK爬虫运行在阿里云的一个Windows Server实例上。抽卡机器人直接查询摩点的订单接口，接口返回的订单信息和抽卡机器人的抽卡数据使用sqlite直接存储在该实例上，但PK爬虫获得的数据（即各家PK实时金额）却存在另一个单独的个人MySql服务器上以供Datav直接查询。这样的架构主要有以下两个问题：

1. 为了节省资金，运行Windows Server的是一个单核2GB的阿里云实例。该实例不仅需要运行臃肿的Windows Server及其GUI，还要运行酷Q机器人（包括各种插件）、抽卡机器人和PK爬虫，导致稳定性极差，经常需要重启酷Q机器人和其他程序。
2. 由于抽卡数据和PK爬虫的数据分散在两个不同的数据库服务器实例中，统一管理和查询各种数据非常不便，可拓展性差。

五选以后，攻城狮组对应援会IT服务的架构进行了改进，弃用了原来的Windows Server实例。取而代之的是两个Ubuntu服务器实例与一个MySql服务器实例：
- MySql服务器实例： 负责存储所有与应援会IT服务相关的数据。
- 一号Ubuntu服务器实例： 负责运行应援会API服务器（基于Django/Django REST Framework），与MySql服务器实例对接。所有对于MySql数据库的读写都需要通过此API服务器实行。
- 二号Ubuntu服务器实例： 负责运行Docker容器中的酷Q机器人（酷Q机器人无原生Linux版本）和其他与酷Q机器人对接的服务。
    - 与酷Q机器人对接的服务包括：
        - 口袋48房间监听机器人： 一个基于Node.js的定时监听程序，定时通过口袋48的API查询房间有无新的信息。有新信息时，通过Websocket连接酷Q向应援会大群播报。此服务无需通过应援会API读写数据。
        - 新浪微博监听机器人： 一个基于Node.js的定时监听程序，定时通过新浪的移动端API查询是否有新的微博。有新微博时，通过Websocket连接酷Q向应援会大群播报。此服务无需通过应援会API读写数据。
        - 应援会大群应答机器人： 一个基于Node.js的事件驱动程序。此程序通过Websocket与酷Q机器人对接；大群有新的信息或有新人加群时，酷Q机器人会生成一个新的事件。如果该事件是一条新的消息，应答机器人会向应援会API查询应答关键词；如果该消息包含相关关键词，则会向大群播报该关键词的应答消息。如果该事件是新人加群，应答机器人会向应援会API查询入群欢迎消息，然后向群内的新成员播报。

![My helpful screenshot](/assets/architecture_overview.jpg)

这样的API服务器/客户端架构意味着应援会管理可以通过Django的管理页面直接修改应答关键词和信息以及加群信息，而无需修改代码或通过SSH/远程桌面登录服务器实例修改酷Q机器人的插件配置，也给应援会的其他IT服务（例如应援会网站等）留下了拓展的空间。